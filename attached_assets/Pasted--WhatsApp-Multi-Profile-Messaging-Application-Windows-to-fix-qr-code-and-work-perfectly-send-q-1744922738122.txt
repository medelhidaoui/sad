
# WhatsApp Multi-Profile Messaging Application (Windows)
to fix qr code and work perfectly send qr code from backend with backend like send qr inside div to frontend
## Core Features & Implementation

### WhatsApp Profile Management
- Multiple WhatsApp accounts with unique profile labels
- QR code scanning interface for WhatsApp Web authentication (qr code sended from backend with div to work)
- Real-time connection status monitoring via WebSocket
- Profile management: Add/Edit/Delete/Reconnect
- Session persistence across application restarts
- Auto-reconnect capability for saved profiles
- Session profile storage in local directory or sqlite or json 

### Direct URL Integration
- URL format: `/send?from=profile&to=number&message=text`
- Example: `http://localhost:5000/send?from=work&to=+1234567890&message=Hello&pass=pass&user=user`
- URL parameter validation
- Error handling with clear messages
- Success/failure response pages



### Windows-Specific Setup
- Installation batch scripts
- Chrome/Edge detection
- Automatic browser executable path detection
- Windows service configuration
- Port configuration (default: 85)
- Session storage in local directory

### Data Persistence
- sqlite/json database integration
- Session storage management
- Message history tracking
- Profile configurations
- System settings


###  qr exemple to get real qr work 100%

<div className="flex items-center justify-center">
                <img 
                  src={`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(profile.qrCode)}`} 
                  alt="QR Code" 
                  className="inline-block" 
                />
              </div>

## Environment Variables

write files for windows to work in windows 
vite.windows
vite.confi.windows 
.bat to auto install and build in windows 
Windows Compatibility Files - Explanation
This document explains each of the Windows-specific files and what they do.

Configuration Files
remembre to write this files
1-### vite.config.windows.ts
This is a Windows-compatible version of the Vite configuration file that:

Replaces import.meta.dirname (which is Replit-specific) with standard Node.js __dirname
Uses fileURLToPath to create a proper cross-platform path resolution
Removes Replit-specific plugins that don't work on Windows
2-### server/vite.windows.ts
This is a Windows-compatible version of the server Vite configuration that:

Replaces import.meta.dirname with standard Node.js __dirname
Fixes path resolution for Windows compatibility
Modifies the server options to work with standard Vite
3-## Installation & Setup Scripts with .bat
